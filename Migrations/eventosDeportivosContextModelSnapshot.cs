// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace eventosDeportivos.Migrations
{
    [DbContext(typeof(eventosDeportivosContext))]
    partial class eventosDeportivosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EquipoTorneo", b =>
                {
                    b.Property<int>("equiposequipoId")
                        .HasColumnType("int");

                    b.Property<int>("torneostorneoId")
                        .HasColumnType("int");

                    b.HasKey("equiposequipoId", "torneostorneoId");

                    b.HasIndex("torneostorneoId");

                    b.ToTable("EquipoTorneo");
                });

            modelBuilder.Entity("MvcArbitro.Models.Arbitro", b =>
                {
                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("colegioArbitralId")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("deporte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("torneoId")
                        .HasColumnType("int");

                    b.HasKey("documento");

                    b.HasIndex("colegioArbitralId");

                    b.HasIndex("torneoId");

                    b.ToTable("Arbitro");
                });

            modelBuilder.Entity("MvcCancha.Models.Cancha", b =>
                {
                    b.Property<int>("canchaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("canchaId"), 1L, 1);

                    b.Property<int>("cantidadEspectadores")
                        .HasColumnType("int");

                    b.Property<string>("disciplina")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("escenarioId")
                        .HasColumnType("int");

                    b.Property<string>("medidas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("canchaId");

                    b.HasIndex("escenarioId");

                    b.ToTable("Cancha");
                });

            modelBuilder.Entity("MvcColegioArbitral.Models.colegioArbitral", b =>
                {
                    b.Property<int>("colegioArbitralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("colegioArbitralId"), 1L, 1);

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("correo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("resolucion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("telefono")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("colegioArbitralId");

                    b.ToTable("colegioArbitral");
                });

            modelBuilder.Entity("MvcDeportista.Models.Deportista", b =>
                {
                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("EPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RH")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("equipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("documento");

                    b.HasIndex("equipoId");

                    b.ToTable("Deportista");
                });

            modelBuilder.Entity("MvcEntrenador.Models.Entrenador", b =>
                {
                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("equipoId")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("documento");

                    b.ToTable("Entrenador");
                });

            modelBuilder.Entity("MvcEquipo.Models.Equipo", b =>
                {
                    b.Property<int>("equipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("equipoId"), 1L, 1);

                    b.Property<string>("deporte")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("entrenadorForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("patrocinadorId")
                        .HasColumnType("int");

                    b.HasKey("equipoId");

                    b.HasIndex("entrenadorForeignKey")
                        .IsUnique();

                    b.HasIndex("patrocinadorId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("MvcEscenario.Models.Escenario", b =>
                {
                    b.Property<int>("escenarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("escenarioId"), 1L, 1);

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("torneoId")
                        .HasColumnType("int");

                    b.HasKey("escenarioId");

                    b.HasIndex("torneoId");

                    b.ToTable("Escenario");
                });

            modelBuilder.Entity("MvcMunicipio.Models.Municipio", b =>
                {
                    b.Property<int>("municipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("municipioId"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("municipioId");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("MvcPatrocinador.Models.Patrocinador", b =>
                {
                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("tipoPersona")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("documento");

                    b.ToTable("Patrocinador");
                });

            modelBuilder.Entity("MvcTorneo.Models.Torneo", b =>
                {
                    b.Property<int>("torneoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("torneoId"), 1L, 1);

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("municipioId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("torneoId");

                    b.HasIndex("municipioId");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("Torneo");
                });

            modelBuilder.Entity("EquipoTorneo", b =>
                {
                    b.HasOne("MvcEquipo.Models.Equipo", null)
                        .WithMany()
                        .HasForeignKey("equiposequipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcTorneo.Models.Torneo", null)
                        .WithMany()
                        .HasForeignKey("torneostorneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcArbitro.Models.Arbitro", b =>
                {
                    b.HasOne("MvcColegioArbitral.Models.colegioArbitral", "colegioArbitral")
                        .WithMany("arbitrosColegio")
                        .HasForeignKey("colegioArbitralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcTorneo.Models.Torneo", "torneo")
                        .WithMany()
                        .HasForeignKey("torneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("colegioArbitral");

                    b.Navigation("torneo");
                });

            modelBuilder.Entity("MvcCancha.Models.Cancha", b =>
                {
                    b.HasOne("MvcEscenario.Models.Escenario", "escenario")
                        .WithMany("listaCanchas")
                        .HasForeignKey("escenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("escenario");
                });

            modelBuilder.Entity("MvcDeportista.Models.Deportista", b =>
                {
                    b.HasOne("MvcEquipo.Models.Equipo", "equipo")
                        .WithMany()
                        .HasForeignKey("equipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipo");
                });

            modelBuilder.Entity("MvcEquipo.Models.Equipo", b =>
                {
                    b.HasOne("MvcEntrenador.Models.Entrenador", "entrenador")
                        .WithOne("equipo")
                        .HasForeignKey("MvcEquipo.Models.Equipo", "entrenadorForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcPatrocinador.Models.Patrocinador", "patrocinador")
                        .WithMany("equipoPatrocinio")
                        .HasForeignKey("patrocinadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("entrenador");

                    b.Navigation("patrocinador");
                });

            modelBuilder.Entity("MvcEscenario.Models.Escenario", b =>
                {
                    b.HasOne("MvcTorneo.Models.Torneo", "torneo")
                        .WithMany()
                        .HasForeignKey("torneoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("torneo");
                });

            modelBuilder.Entity("MvcTorneo.Models.Torneo", b =>
                {
                    b.HasOne("MvcMunicipio.Models.Municipio", "municipio")
                        .WithMany("torneos")
                        .HasForeignKey("municipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("municipio");
                });

            modelBuilder.Entity("MvcColegioArbitral.Models.colegioArbitral", b =>
                {
                    b.Navigation("arbitrosColegio");
                });

            modelBuilder.Entity("MvcEntrenador.Models.Entrenador", b =>
                {
                    b.Navigation("equipo");
                });

            modelBuilder.Entity("MvcEscenario.Models.Escenario", b =>
                {
                    b.Navigation("listaCanchas");
                });

            modelBuilder.Entity("MvcMunicipio.Models.Municipio", b =>
                {
                    b.Navigation("torneos");
                });

            modelBuilder.Entity("MvcPatrocinador.Models.Patrocinador", b =>
                {
                    b.Navigation("equipoPatrocinio");
                });
#pragma warning restore 612, 618
        }
    }
}
